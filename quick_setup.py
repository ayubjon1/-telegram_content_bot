#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞ –¥–ª—è Content Manager Bot
–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python quick_setup.py
"""

import os
import re
from pathlib import Path


def create_gitignore():
    """–°–æ–∑–¥–∞–Ω–∏–µ .gitignore —Ñ–∞–π–ª–∞"""
    gitignore_content = """# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (–í–ê–ñ–ù–û!)
.env
.env.local
.env.production
config.json
config.encrypted*
keys.py

# –õ–æ–≥–∏ –∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
*.log
logs/
data/*.db
data/*.sqlite

# Python
__pycache__/
*.pyc
*.pyo
.pytest_cache/
venv/
env/

# IDE
.vscode/
.idea/
*.swp

# OS
.DS_Store
Thumbs.db
"""

    with open('.gitignore', 'w', encoding='utf-8') as f:
        f.write(gitignore_content)
    print("‚úÖ –°–æ–∑–¥–∞–Ω .gitignore —Ñ–∞–π–ª")


def validate_bot_token(token):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞"""
    pattern = r'^\d{8,10}:[a-zA-Z0-9_-]{35}$'
    return re.match(pattern, token) is not None


def validate_openai_key(key):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è OpenAI –∫–ª—é—á–∞"""
    return key.startswith('sk-') and len(key) > 20


def validate_telegram_id(user_id):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è Telegram ID"""
    try:
        uid = int(user_id)
        return 1 <= uid <= 999999999999
    except ValueError:
        return False


def main():
    print("ü§ñ Content Manager Bot - –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ .env")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ .env
    if Path('.env').exists():
        overwrite = input("–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): ").lower()
        if overwrite != 'y':
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return

    print("\nüìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print("(–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")

    # –°–±–æ—Ä –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    while True:
        bot_token = input("\nü§ñ Bot Token (–æ—Ç @BotFather): ").strip()
        if not bot_token:
            print("‚ùå Bot Token –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
            continue
        if not validate_bot_token(bot_token):
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞! –î–æ–ª–∂–µ–Ω –±—ã—Ç—å: 123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11")
            continue
        break

    while True:
        openai_key = input("üß† OpenAI API Key: ").strip()
        if not openai_key:
            print("‚ùå OpenAI API Key –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
            continue
        if not validate_openai_key(openai_key):
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞! –î–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 'sk-'")
            continue
        break

    while True:
        admin_id = input("üë§ –í–∞—à Telegram ID: ").strip()
        if not admin_id:
            print("‚ùå Admin ID –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
            continue
        if not validate_telegram_id(admin_id):
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π Telegram ID! –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 999999999999")
            continue
        break

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\n‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):")

    news_api_key = input("üì∞ News API Key (Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()

    print("\nüì° RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
    print("–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: Lenta.ru, –†–ò–ê, –¢–ê–°–°, –†–ì")
    custom_rss = input("–°–≤–æ–∏ RSS –ª–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (Enter –¥–ª—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é): ").strip()

    if custom_rss:
        rss_feeds = custom_rss
    else:
        rss_feeds = "https://lenta.ru/rss,https://ria.ru/export/rss2/archive/index.xml,https://tass.ru/rss/v2.xml,https://rg.ru/xml/index.xml"

    print("\nü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenAI:")
    openai_model = input("–ú–æ–¥–µ–ª—å (gpt-4): ").strip() or "gpt-4"
    max_tokens = input("–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤ (800): ").strip() or "800"
    temperature = input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ 0.0-1.0 (0.7): ").strip() or "0.7"

    print("\nüìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:")
    posts_per_day = input("–ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å (5): ").strip() or "5"
    interval_hours = input("–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏ –≤ —á–∞—Å–∞—Ö (3): ").strip() or "3"

    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    env_content = f"""# ========================================
# Content Manager Bot Configuration
# –ù–ï –î–û–ë–ê–í–õ–Ø–ô–¢–ï –≠–¢–û–¢ –§–ê–ô–õ –í GIT!
# ========================================

# –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
BOT_TOKEN={bot_token}
OPENAI_API_KEY={openai_key}
ADMIN_ID={admin_id}

# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï API –ö–õ–Æ–ß–ò
NEWS_API_KEY={news_api_key}

# RSS –ò–°–¢–û–ß–ù–ò–ö–ò –ù–û–í–û–°–¢–ï–ô
RSS_FEEDS={rss_feeds}

# –ù–ê–°–¢–†–û–ô–ö–ò OPENAI
OPENAI_MODEL={openai_model}
OPENAI_MAX_TOKENS={max_tokens}
OPENAI_TEMPERATURE={temperature}

# –ü–£–¢–ò –ò –§–ê–ô–õ–´
DATABASE_PATH=data/bot.db

# –ù–ê–°–¢–†–û–ô–ö–ò –ü–£–ë–õ–ò–ö–ê–¶–ò–ò
POSTS_PER_DAY={posts_per_day}
POST_INTERVAL_HOURS={interval_hours}
REQUEST_TIMEOUT=30
MAX_NEWS_PER_SOURCE=10

# –õ–û–ì–ò–†–û–í–ê–ù–ò–ï
LOG_LEVEL=INFO
LOG_FILE=bot.log

# –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
NOTIFY_ERRORS=true
NOTIFY_SUCCESS=false
NOTIFY_DAILY_STATS=true

# –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨
RATE_LIMIT_ENABLED=true
ENCRYPTION_ENABLED=false
"""

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º .env —Ñ–∞–π–ª
    with open('.env', 'w', encoding='utf-8') as f:
        f.write(env_content)

    # –°–æ–∑–¥–∞–µ–º .gitignore
    create_gitignore()

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    os.makedirs('data', exist_ok=True)
    os.makedirs('logs', exist_ok=True)

    print("\n" + "=" * 60)
    print("üéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 60)

    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω .gitignore —Ñ–∞–π–ª")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")

    print(f"\nüìã –ß—Ç–æ —Å–¥–µ–ª–∞–Ω–æ:")
    print(f"  ‚Ä¢ Bot Token: {bot_token[:10]}...—Å–∫—Ä—ã—Ç")
    print(f"  ‚Ä¢ OpenAI Key: {openai_key[:7]}...—Å–∫—Ä—ã—Ç")
    print(f"  ‚Ä¢ Admin ID: {admin_id}")
    print(f"  ‚Ä¢ –ú–æ–¥–µ–ª—å OpenAI: {openai_model}")
    print(f"  ‚Ä¢ RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(rss_feeds.split(','))}")

    print(f"\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print(f"  1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    print(f"  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py")
    print(f"  3. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à–∏ –∫–∞–Ω–∞–ª—ã –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print(f"  4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞–Ω–∞–ª—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é –±–æ—Ç–∞")

    print(f"\n‚ö†Ô∏è –í–ê–ñ–ù–û:")
    print(f"  ‚Ä¢ –§–∞–π–ª .env —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏")
    print(f"  ‚Ä¢ –ù–ï –¥–æ–±–∞–≤–ª—è–π—Ç–µ .env –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    print(f"  ‚Ä¢ .env —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    try:
        from config import config
        if config.validate_config():
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {str(e)}")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python main.py")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é")